version: "3"

volumes:
  portainer_data:
  nextcloud-userdata:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${NFS_ADDR},nolock,soft,rw"
      device: ":${NFS_PATH_USERDATA}"
  nextcloud-db:
    driver: local
    driver_opts:
      type: nfs
      o: "addr=${NFS_ADDR},nolock,soft,rw"
      device: ":${NFS_PATH_DB}"


services:
  reverse-proxy:
    image: traefik:v2.4
    container_name: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
      - 53:53/tcp
      - 53:53/udp
    networks:
      - traefiknet
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./traefik/dynconfig.yaml:/etc/traefik/dynconfig.yaml:ro
      - ./certs:/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.lan`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.service=api@internal"

  whoami:
    image: traefik/whoami
    container_name: whoami
    networks:
      - traefiknet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`testcname.lan`)"
      - "traefik.http.routers.whoami.tls=true"

  portainer:
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    restart: always
    container_name: portainer
    networks:
      - traefiknet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.lan`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.services.portainer-service.loadbalancer.server.port=9000"

      ## from: https://documentation.portainer.io/v2.0/ad/traefik/rp-traefik/
      # # Frontend
      # - "traefik.enable=true"
      # - "traefik.http.routers.frontend.rule=Host(`portainer.lan`)"
      # - "traefik.http.routers.frontend.entrypoints=websecure"
      # - "traefik.http.services.frontend.loadbalancer.server.port=9000"
      # - "traefik.http.routers.frontend.service=frontend"
      # - "traefik.http.routers.frontend.tls=true"

      # # Edge
      # - "traefik.http.routers.edge.rule=Host(`portainer-edge.lan`)"
      # - "traefik.http.routers.edge.entrypoints=websecure"
      # - "traefik.http.services.edge.loadbalancer.server.port=8000"
      # - "traefik.http.routers.edge.service=edge"
      # - "traefik.http.routers.edge.tls=true"

  heimdall:
    container_name: heimdall
    image: ghcr.io/linuxserver/heimdall
    networks:
      - traefiknet
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Berlin
    volumes:
      # TODO: move to e.g. NFS mount
      - ./config:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.heimdall.rule=Host(`heimdall.lan`)"
      - "traefik.http.routers.heimdall.tls=true"

  # Based on:
  #   - https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/insecure/mariadb/apache/docker-compose.yml
  #   - https://goneuland.de/nextcloud-server-mit-docker-compose-und-traefik-installieren/#6_Optimierungen
  #
  # Full documentation on github
  #
  # Nextcloud CLI:
  #   docker-compose exec --user www-data app php occ
  #
  # To update:
  #   docker-compose down
  #   docker-compose pull
  #   docker-compose up -d
  #
  # TODO:
  #   - test update
  #   - stress test
  #   - occassional error cron cannot run due to permission error (nextcloud admin > overview)
  #
  # DONE:
  #   - test NFS volumes --> not for webroot, due to PHP file locking situation
  #   - fix reverse proxy settings for apache (nextcloud admin > overview)

    db:
    image: mariadb
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - nextcloud-db:/var/lib/mysql
    networks:
      - nextcloud_internal
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}

  redis:
    image: redis:alpine
    restart: always
    networks:
      - nextcloud_internal

  cron:
    image: nextcloud:apache
    restart: always
    networks:
      - nextcloud_internal
    volumes:
      - ./webroot:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  app:
    image: nextcloud:apache
    restart: always
    networks:
      - nextcloud_internal
      - traefiknet
    depends_on:
      - db
      - redis
    volumes:
      - nextcloud-userdata:/data
      - ./webroot:/var/www/html
    environment:
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_HOST=db
      - REDIS_HOST=redis
      - NEXTCLOUD_DATA_DIR=/data
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_DOMAIN}
      - APACHE_DISABLE_REWRITE_IP=1
      - TRUSTED_PROXIES=${TRAEFIK_ADDRESS}
      - OVERWRITEHOST=${NEXTCLOUD_DOMAIN}
      - OVERWRITEPROTOCOL=https
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefiknet"
      - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_DOMAIN}`)"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.middlewares.nextcloud-dav.redirectRegex.permanent=true"
      - "traefik.http.middlewares.nextcloud-dav.redirectRegex.regex=^https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-dav.redirectRegex.replacement=https://$${1}/remote.php/dav/"
      - "traefik.http.middlewares.nextcloud-sts.headers.stsincludesubdomains=false"
      - "traefik.http.middlewares.nextcloud-sts.headers.stspreload=true"
      - "traefik.http.middlewares.nextcloud-sts.headers.stsseconds=31536000"
      - "traefik.http.middlewares.nextcloud-sts.headers.isdevelopment=false"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-dav,nextcloud-sts"

networks:
  traefiknet:
    external: true
  nextcloud_internal:
    internal: true

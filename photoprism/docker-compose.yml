version: '3.5'

services:
  photoprism:
    image: photoprism/photoprism:240915
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    # Server has too less resource to initialize big media collection.
    # Uncomment following ports settings, when running Photoprism instance on a
    # separate faster PC for the purpose of library initialization.
    # ports:
    #  - 2342:2342
    networks:
      - traefiknet
      - photoprism_internal
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: ${PHOTOPRISM_ADMIN_PASSWORD?}
      PHOTOPRISM_HTTP_PORT: 2342
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # Improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_DISABLE_TLS: "true"                 # since Release 2023-07-19. TLS handled by traefik
      PHOTOPRISM_DEBUG: "false"
      PHOTOPRISM_PUBLIC: "true"                     # No authentication required (disables password protection)
      PHOTOPRISM_INDEX_SCHEDULE: "30 1 * * *"
      PHOTOPRISM_AUTH_MODE: "public"                # Since 2022-07-28 Release: public or password
      PHOTOPRISM_READONLY: "true"                   # Don't modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # Enables experimental features
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # Disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "true"           # Disables Settings in Web UI
      PHOTOPRISM_DISABLE_WEBDAV: "true"
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # Disables using TensorFlow for image classification
      PHOTOPRISM_DISABLE_FACES: "false"
      PHOTOPRISM_DARKTABLE_PRESETS: "false"          # Enables Darktable presets and disables concurrent RAW conversion
      PHOTOPRISM_DETECT_NSFW: "false"                # Flag photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # Allow uploads that MAY be offensive
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # Use MariaDB (or MySQL) instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: ${MYSQL_DB_NAME?}
      PHOTOPRISM_DATABASE_USER: ${MYSQL_DB_USER?}
      PHOTOPRISM_DATABASE_PASSWORD: ${MYSQL_DB_PASS?}
      PHOTOPRISM_SITE_URL: "http://${PHOTOPRISM_SITE_URL?}"
      PHOTOPRISM_SITE_TITLE: "PhotoPrism"
      PHOTOPRISM_SITE_CAPTION: "Browse Your Life"
      PHOTOPRISM_SITE_DESCRIPTION: ""
      PHOTOPRISM_SITE_AUTHOR: ""
      PHOTOPRISM_ORIGINALS_LIMIT: 5000              # in MB
      HOME: "/photoprism"
      # You may optionally set a user / group id using environment variables if your Docker version or NAS does not
      # support this natively (see next example):
      # UID: 1000
      # GID: 1000
      # UMASK: 0000
    # Uncomment and edit the following line to set a specific user / group id (native):
    # user: "1000:1000"
    volumes:
      - ${PP_PATH_ORIGINALS?}:/photoprism/originals
      - ${PP_PATH_STORAGE?}:/photoprism/storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.photoprism.rule=Host(`${PHOTOPRISM_SITE_URL}`)"
      - "traefik.http.services.photoprism-service.loadbalancer.server.port=2342"

  mariadb:
    image: mariadb:10.5
    restart: unless-stopped
    networks:
      - photoprism_internal
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    command: mariadbd --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=50
    volumes: # Don't remove permanent storage for index database files!
      - ${PP_PATH_DB}:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS?}
      MYSQL_DATABASE: ${MYSQL_DB_NAME?}
      MYSQL_USER: ${MYSQL_DB_USER?}
      MYSQL_PASSWORD: ${MYSQL_DB_PASS?}


networks:
  traefiknet:
    external: true
  photoprism_internal:
    internal: true

# Uncomment the following lines to upgrade automatically, whenever there is a new Docker image available:
#
#  watchtower:
#    image: containrrr/watchtower
#    restart: unless-stopped
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"

version: "3"

services:
  reverse-proxy:
    image: traefik:v2.4
    container_name: traefik
    restart: always
    command:
      - "--global.sendAnonymousUsage=false"
      - "--accessLog=true"
      # - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--entryPoints.websecure.address=:443"
      - "--entryPoints.websecure.http.tls=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=traefiknet"  # necessary for container with multiple networks
      - "--certificatesResolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.le.acme.dnsChallenge.provider=cloudflare"
      - "--certificatesResolvers.le.acme.dnsChallenge.delayBeforeCheck=0"
      # Auto routing to compose project, automatically appending TLD
      # https://blog.thesparktree.com/traefik-advanced-config#automatic-subdomain-routing
      # - "--providers.docker.defaultRule=Host(`{{ index .Labels \"com.docker.compose.project\" }}.${DOMAIN_NAME:?domain unset}`)"
      # Ref: https://doc.traefik.io/traefik/observability/metrics/influxdb/
      - "--metrics.influxDB.address=${DOMAIN_NAME:?}:8089"
      - "--metrics.influxDB.database=traefik"
    ports:
      - 80:80
      - 443:443
    networks:
      - traefiknet
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME:?domain unset}`)"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.service=api@internal"
      # https://community.traefik.io/t/lets-encrypt-for-a-lot-of-domains-automatically/2726/9
      - "traefik.http.routers.traefik.tls.domains[0].main=${DOMAIN_NAME:?domain unset}"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.${DOMAIN_NAME:?domain unset}"
    environment:
      - CF_DNS_API_TOKEN

  whoami:
    image: traefik/whoami
    container_name: whoami
    networks:
      - traefiknet
    depends_on:
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN_NAME}`)"

networks:
  traefiknet:
    external: true
